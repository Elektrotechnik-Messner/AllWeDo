@using Schulmuseum.Authentication

@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavManager

<nav class="navbar">
      <div class="content">
        <div class="bar">
          <div class="logo"><span class="logo"></span><b>@Title</b></div>
          <span class="navbtn" @onclick="ToggleUnfold">
            <span class="navbtn-container">
              <span class="bar1"></span>
              <span class="bar2"></span>
              <span class="bar3"></span>
              </span>
          </span>
        </div>
        <div class="contents@(Unfolded ? " active" : "")">
          <div class="links">
            <a href="/">Home</a>
            <AuthorizeView Roles="user,teacher,admin">
              <Authorized>
                <a href="/my-posts">Meine Beiträge</a>
                
                
                <a @onclick="Logout" title="@context.User.Identity!.Name" href="javascript:void(0)"><button>Logout</button></a>
              </Authorized>
              <NotAuthorized>
                <a href="/alle-artikel">Alle Artikel</a>
                <a href="/alle-fächer">Alle Fächer</a>
                <a href="/login"><button>Login</button></a>
              </NotAuthorized>
            </AuthorizeView>
            
          </div>
        </div>
      </div>
    </nav>

@code {

  [Parameter]
  public string Title { get; set; } = "";

  public bool Unfolded = false;

  public void ToggleUnfold()
  {
    Unfolded = !Unfolded;
  }

  private async Task Logout()
  {
    var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
    await customAuthStateProvider.UpdateAuthenticationState(null!);
    NavManager.NavigateTo("/", true);
  }

}