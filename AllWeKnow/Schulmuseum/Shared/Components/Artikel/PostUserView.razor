@if (CategoryId + 1 == VisibleId || VisibleId == 0)
{
  <div class="edit-post">
    <span class="title">@Title, @Category</span>
    <span class="actions">
      <p>@(Convert.ToBoolean(Qualified) ? "Genehmigt" : "Nicht Genehmigt")</p>
      <a href="/edit/@Link">🖊️</a>
      <a href="/artikel/@Link">👁️</a>
      <button @onclick="Delete">🗑️</button>
    </span>
  </div>
}

@code {
  
  [Parameter]
  public int Id { get; set; } = 0;
  
  [Parameter]
  public string Title { get; set; } = "";
  
  [Parameter]
  public string Category { get; set; } = "";
  
  [Parameter]
  public string Link { get; set; } = "";

  [Parameter]
  public string ImageUrl { get; set; } = "resources/images/not-found.jpg";
  
  [Parameter]
  public int CategoryId { get; set; } = 0;
  
  [Parameter]
  public int VisibleId { get; set; } = 0;
  
  [Parameter]
  public int Qualified { get; set; } = 0;

  private async Task Delete()
  {
    int id = Id;
    bool confirmed = await Js.InvokeAsync<bool>("confirm", "Sind Sie sicher, dass Sie diesen Artikel löschen möchten? Der Artikel ist nachher nicht wiederherstellbar!");
    if (confirmed)
    {
      string sql = "delete from posts where id = @ID";
      await Data.SaveData(sql, new { @ID = Id }, Config.GetConnectionString("main"));
      NavManager.NavigateTo("/meine-artikel", true);
    }
    else
    {
      return;
    }
  }
}