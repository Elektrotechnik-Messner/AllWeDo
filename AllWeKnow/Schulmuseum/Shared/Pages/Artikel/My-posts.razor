@page "/meine-artikel"
@using System.Runtime.InteropServices
@using DatabaseLibrary
@using Schulmuseum.Models
@using Microsoft.Extensions.Configuration

@inject DataAccess Data
@inject IConfiguration Config
@attribute [Authorize(Roles = "admin,teacher,student")]

<HeadTitle>Meine Artikel</HeadTitle>

<LazyLoader Load="Load" Text="Wird geladen">
<h3 class="m-b">Meine Artikel</h3>
  <a href="/new" ><button class="m-b">Artikel erstellen</button></a>
  @foreach (var t in _posts)
      {
        if (t.CreatorId == _creatorId){
          string link = "/artikel/" + @t.Id;
          <PostUserView Id="@t.Id" Category="@_subjects[t.CategoryId].Name" Title="@t.Title" ImageUrl="@t.TitleImage" CategoryId="@t.CategoryId" VisibleId="@VisibleCategoryId" Link="@link" Qualified="@t.Qualified"/>
        }
      }
</LazyLoader>

<AuthorizeView>
    <Authorized>
        @{
            _creatorId = int.Parse(context.User.Identity!.AuthenticationType!);
        }
    </Authorized>
</AuthorizeView>

@code 
{
  List<SubjectModel>? _subjects;
  List<BlogPost>? _posts;
  int _creatorId;
      
  private const int MaxBlogCount = 25; // Max number of displayed blogs on title page
  private readonly List<bool> _categoryFilter = new List<bool>();
  public int VisibleCategoryId = 0;

  public async Task Load(LazyLoader arg)
  {
  // Get all the settings form the database
    _subjects = await Data.LoadData<SubjectModel, dynamic>("SELECT * FROM subjects", new { }, Config.GetConnectionString("main"));
    _categoryFilter.Add(true);
    foreach (var subject in _subjects)
    {
      _categoryFilter.Add(false);
    }
  // Get all the posts form the database
    _posts = await Data.LoadData<BlogPost, dynamic>("SELECT * FROM posts ORDER BY id DESC", new { }, Config.GetConnectionString("main"));
  }

  public void UpdateFilter(int value)
  {
    for (int i = 0; i < _categoryFilter.Count; i++)
    {
      _categoryFilter[i] = false;
    }
    _categoryFilter[value] = true;
    VisibleCategoryId = value;
  }
}