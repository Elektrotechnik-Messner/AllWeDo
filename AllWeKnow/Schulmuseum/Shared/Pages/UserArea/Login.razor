@page "/login"
@using Schulmuseum.Authentication

@inject UserAccountService userAccountService
@inject IJSRuntime js
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager


<HeadTitle>Login</HeadTitle>


<div class="login">
    <input type="text" @bind="model.UserName" name=""  placeholder="Benutzername">
    <input type="password" @bind="model.Password" name=""  placeholder="Passwort">
    <button type="submit" @onclick="Authenticate">Login</button>

</div>


@code {

    private class Model
    {
        public string UserName { get; set; }
        public string Password { get; set; }
    }

    private Model model = new Model();

    private async Task Authenticate()
    {
        var userAccount = userAccountService.GetByUserName(model.UserName);
        if (userAccount == null || userAccount.Password != model.Password)
        {
            await js.InvokeVoidAsync("alert", "Invalid Username or Password");
            return;
        }

        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(new UserSession
        {
            UserName = userAccount.UserName,
            Role = userAccount.Role
        });
        navManager.NavigateTo("/", true);
    }

}