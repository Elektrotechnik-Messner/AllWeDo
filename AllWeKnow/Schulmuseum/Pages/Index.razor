@page "/"

@using DatabaseLibrary
@using Schulmuseum.Models
@using Microsoft.Extensions.Configuration

@inject DataAccess Data
@inject IConfiguration Config

@if (_settings == null || _subjects == null)
{
   <h3>Loading.....</h3>
} else

{
<PageTitle>@_settingsDict["page-title"]</PageTitle>
    
<Hero Title="@_settingsDict["app-name"]" PostTitle="Post Title" PostDesc="Lorem ipsum dolor sit amet, consectetur adipisicing elit.Dignissimos fuga deleniti officia numquam totam, quo nostrum?" ImageUrl="https://images.unsplash.com/photo-1501594907352-04cda38ebc29?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1932&q=80" />
  
<div class="tags">
  <Tag Active="true" Name="All"/>
  @foreach (var subject in _subjects)
  {
    <Tag Active="false" Name="@subject.Name"/>
  }
</div>

  <div class="posts">
    @for (var i = 0; i < 10; i++)
    {
      <Post Category="@_subjects[i%3].Name" Title="Title" ImageUrl="https://images.unsplash.com/photo-1661051690325-d030d5b8aaec?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1854&q=80"/>
    }
  </div>
}

@code {
  List<SettingsModel>? _settings;
  List<SubjectModel>? _subjects;
  readonly IDictionary<string, string?> _settingsDict = new Dictionary<string, string?>();
   
  protected override async Task OnInitializedAsync()
  {
  // Get all the settings form the database
    const string sqlSu = "select * from subjects";
    _subjects = await Data.LoadData<SubjectModel, dynamic>(sqlSu, new { }, Config.GetConnectionString("main"));
  // Get all the settings form the database
    const string sqlS = "select * from settings";
    _settings = await Data.LoadData<SettingsModel, dynamic>(sqlS, new { }, Config.GetConnectionString("main"));
  // Put all the settings in a Dictionary for convenience
    foreach (var setting in _settings)
    {
      if (setting.Name != null) _settingsDict.Add(setting.Name, setting.Value);
    }
  }
}